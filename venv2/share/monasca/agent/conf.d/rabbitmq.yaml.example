# (C) Copyright 2015 Hewlett Packard Enterprise Development Company LP

init_config:

instances:
    # NOTE: The rabbitmq management plugin must be enabled for this check to work!
    # To enable the management plugin:
        # sudo rabbitmq-plugins enable rabbitmq_management
        # OUTPUT:
            # The following plugins have been enabled:
              # mochiweb
              # webmachine
              # rabbitmq_web_dispatch
              # amqp_client
              # rabbitmq_management_agent
              # rabbitmq_management
            # Plugin configuration has changed. Restart RabbitMQ for changes to take effect.
    # To restart the rabbitmq-server
        # sudo service rabbitmq-server restart
        # OUTPUT:
          # * Restarting message broker rabbitmq-server
    #
    # For every instance a 'rabbitmq_api_url' must be provided, pointing to the api
    # url of the RabbitMQ Management Plugin (http://www.rabbitmq.com/management.html)
    # optional: 'rabbitmq_user' (default: guest) and 'rabbitmq_pass' (default: guest)
    #
    # If you have less than 5 queues, you don't have to set the queues parameters
    # All queues metrics will be collected
    # If you have more than 5 queues: you can set 5 queue names. Metrics will be collected
    # for these queues. For the other queues, aggregate will be calculated.
    #
    # # If you have less than 3 nodes, you don't have to set the nodes parameters
    # All nodes metrics will be collected
    # If you have more than 3 nodes: you can set 3 node names. Metrics will be collected
    # for these nodes. For the other nodes, aggregate will be calculated.
    #
    # Warning: aggregate are calculated on the 100 first queues/nodes.
    #
    # The whitelist limits the collected metrics based on their path. The whitelist shown
    # includes all the metrics collected by default if no list is specified. If any section
    # is not specified, the defaults will be collected for that section (i.e. if the key 'node'
    # is not present, the 'node' metrics shown in this example will be collected)


    -  rabbitmq_api_url: http://localhost:15672/api/
       rabbitmq_user: guest
       rabbitmq_pass: guest
       nodes:
        - rabbit@localhost
        - rabbit2@domain
       queues:
        - queue1
        - queue2
       whitelist:
         queue:
          - message_stats/deliver_details/rate
          - message_stats/publish_details/rate
          - message_stats/redeliver_details/rate
         exchange:
          - message_stats/publish_out
          - message_stats/publish_out_details/rate
          - message_stats/publish_in
          - message_stats/publish_in_details/rate
         node:
          - fd_used
          - mem_used
          - run_queue
          - sockets_used
